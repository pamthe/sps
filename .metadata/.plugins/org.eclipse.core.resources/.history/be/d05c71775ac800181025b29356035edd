package com.in28minutes.springboot.jdbc.h2.example.student;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.BeanPropertyRowMapper;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.RowMapper;
import org.springframework.stereotype.Repository;

@Repository
public class StudentJdbcRepository {
	@Autowired
	JdbcTemplate jdbcTemplate;

	class StudentRowMapper implements RowMapper<Friend> {
		@Override
		public Friend mapRow(ResultSet rs, int rowNum) throws SQLException {
			Friend friend = new Friend();
			friend.setId(rs.getLong("id"));
			friend.setName(rs.getString("name"));
			friend.setEmailID(rs.getString("emailID"));
			friend.setFriendList(rs.getString("friendList"));
			return friend;
		}

	}

	public List<Friend> findAll() {
		return jdbcTemplate.query("select * from friend", new StudentRowMapper());
	}

	public Friend findById(long id) {
		return jdbcTemplate.queryForObject("select * from friend where id=?", new Object[] { id },
				new BeanPropertyRowMapper<Friend>(Friend.class));
	}

	public int deleteById(long id) {
		return jdbcTemplate.update("delete from friend where id=?", new Object[] { id });
	}

	public int insert(Friend friend) {
		return jdbcTemplate.update("insert into friend (id, name, emailID, friendList) " + "values(?,  ?, ?)",
				new Object[] { friend.getId(), friend.getName(), friend.getEmailID() });
	}

	public int update(Friend friend) {
		return jdbcTemplate.update("update friend " + " set name = ?, emailID = ? ,friendList=?" + " where id = ?",
				new Object[] { friend.getName(), friend.getEmailID(), friend.getId(), friend.getFriendList() });
	}

}
